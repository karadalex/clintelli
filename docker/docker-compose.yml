version: '3'

services:

  #----------------------------------------------------------------------------------------
  #  RabbitMQ Message Broker
  #----------------------------------------------------------------------------------------
  rabbit:
    build: .
    image: clintelli-rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
      - "1883:1883"

  #----------------------------------------------------------------------------------------
  #  PostgreSQL Database
  #----------------------------------------------------------------------------------------
  postgres:
    image: postgres
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - 5432:5432
    env_file:
      - .env
    networks:
      - clintelli_private_docker_network



  #----------------------------------------------------------------------------------------
  #  Minio S3-like Object Storage
  #----------------------------------------------------------------------------------------

  minio1:
    image: minio/minio
    volumes:
      - minio-data1:/export
    ports:
    - "9001:9000"
    env_file:
      - .env
    networks:
      - clintelli_private_docker_network
    command: server http://minio{1...4}/export

  minio2:
    image: minio/minio
    volumes:
      - minio-data2:/export
    ports:
    - "9002:9000"
    env_file:
      - .env
    networks:
      - clintelli_private_docker_network
    command: server http://minio{1...4}/export

  minio3:
    image: minio/minio
    volumes:
      - minio-data3:/export
    ports:
      - "9003:9000"
    env_file:
      - .env
    networks:
      - clintelli_private_docker_network
    command: server http://minio{1...4}/export

  minio4:
    image: minio/minio
    volumes:
      - minio-data4:/export
    ports:
      - "9004:9000"
    env_file:
      - .env
    networks:
      - clintelli_private_docker_network
    command: server http://minio{1...4}/export


    #----------------------------------------------------------------------------------------
    #  TICK Stack
    #----------------------------------------------------------------------------------------
    influxdb:
    image: influxdb:1.7-alpine
    volumes:
      # Mount for influxdb data directory
      - ./influxdb/data:/var/lib/influxdb
      # Mount for influxdb configuration
      - ./influxdb/config/:/etc/influxdb/
    ports:
      # The API for InfluxDB is served on port 8086
      - "8086:8086"
      - "8082:8082"
      # UDP Port
      - "8089:8089/udp"

  telegraf:
    image: telegraf:1.11-alpine
    environment:
      HOSTNAME: "telegraf-getting-started"
    # Telegraf requires network access to InfluxDB
    links:
      - influxdb
    volumes:
      # Mount for telegraf configuration
      - ./telegraf.conf:/etc/telegraf/telegraf.conf:ro
      # Mount for Docker API access
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - rabbitmq
      - influxdb

  kapacitor:
    image: kapacitor:1.5-alpine
    volumes:
      # Mount for kapacitor data directory
      - ./kapacitor/data/:/var/lib/kapacitor
      # Mount for kapacitor configuration
      - ./kapacitor/config/:/etc/kapacitor/
    # Kapacitor requires network access to Influxdb
    links:
      - influxdb
    ports:
      # The API for Kapacitor is served on port 9092
      - "9092:9092"

  chronograf:
    image: chronograf:1.7-alpine
    environment:
      RESOURCES_PATH: "/usr/share/chronograf/resources"
    volumes:
      # Mount for chronograf database
      - ./chronograf/data/:/var/lib/chronograf/
    links:
      # Chronograf requires network access to InfluxDB and Kapacitor
      - influxdb
      - kapacitor
    ports:
      # The WebUI for Chronograf is served on port 8888
      - "8888:8888"
    depends_on:
      - kapacitor
      - influxdb
      - telegraf


#----------------------------------------------------------------------------------------
#  VOLUMES AND NETWORKING
#----------------------------------------------------------------------------------------

volumes:
  minio-data1:
  minio-data2:
  minio-data3:
  minio-data4:

networks:
  clintelli_private_docker_network:
    external: true
